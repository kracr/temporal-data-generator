Prefix(:=<http://anonymous.com/AcademicConferenceEvent#>)
Prefix(dc:=<http://purl.org/dc/elements/1.1/>)
Prefix(ns:=<http://www.w3.org/2003/06/sw-vocab-status/ns#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(wot:=<http://xmlns.com/wot/0.1/>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(foaf:=<http://xmlns.com/foaf/0.1/>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)
Prefix(event:=<http://w3id.org/daselab/onto/event#>)
Prefix(swrla:=<http://swrl.stanford.edu/ontologies/3.3/swrla.owl#>)
Prefix(cpannotationschema:=<http://www.ontologydesignpatterns.org/schemas/cpannotationschema.owl#>)


Ontology(<http://anonymous.com/AcademicConferenceEvent>
<http://anonymous.com/AcademicConferenceEvent/1.0.0>
Annotation(rdfs:comment "05/05/2023 16:33")
Annotation(rdfs:comment "Academic Conference Event Ontology")

Declaration(Class(:AacdemicEventTrack))
Declaration(Class(:AcademicEvent))
Declaration(Class(:AcademicEventPhases))
Declaration(Class(:AcademicManuscript))
Declaration(Class(:AcademicOrganization))
Declaration(Class(:AcceptedPapersNotificationPhase))
Declaration(Class(:AnnouncementPhase))
Declaration(Class(:Attendee))
Declaration(Class(:Author))
Declaration(Class(:Awardee))
Declaration(Class(:BestPaperAwardee))
Declaration(Class(:CallForPapersAnnouncementPhase))
Declaration(Class(:ChairRole))
Declaration(Class(:ComputerScienceDomain))
Declaration(Class(:Conference))
Declaration(Class(:ConferenceEventPhases))
Declaration(Class(:ConferencePaper))
Declaration(Class(:ConferenceTrack))
Declaration(Class(:DemoPaper))
Declaration(Class(:EarlyAnnouncementPhase))
Declaration(Class(:EarlyRegistrationReminderPhase))
Declaration(Class(:EditorRole))
Declaration(Class(:EventMode))
Declaration(Class(:EventPhases))
Declaration(Class(:InvitedTalkSpeaker))
Declaration(Class(:InvitedTalkSpeakerRole))
Declaration(Class(:InvitedTalks))
Declaration(Class(:JournalArticle))
Declaration(Class(:KeynoteSpeaker))
Declaration(Class(:KeynoteTalks))
Declaration(Class(:LightningTalks))
Declaration(Class(:MainConferenceAnnouncementPhase))
Declaration(Class(:ManuscriptDomain))
Declaration(Class(:NonAcademicOrganization))
Declaration(Class(:NonAuthor))
Declaration(Class(:NotificationPhase))
Declaration(Class(:Organizer))
Declaration(Class(:OrganizingCommittee))
Declaration(Class(:PaperSubmissionReminderPhase))
Declaration(Class(:Participant))
Declaration(Class(:PhDStudent))
Declaration(Class(:PosterPaper))
Declaration(Class(:Presentations))
Declaration(Class(:RegistrationReminderPhase))
Declaration(Class(:ReminderPhase))
Declaration(Class(:ResearchPaper))
Declaration(Class(:ResourcePaper))
Declaration(Class(:Session))
Declaration(Class(:SingleAuthorPaper))
Declaration(Class(:Speaker))
Declaration(Class(:SpeakerRole))
Declaration(Class(:Student))
Declaration(Class(:StudentAuthor))
Declaration(Class(:StudentGrantAwardee))
Declaration(Class(:Talks))
Declaration(Class(:Volunteer))
Declaration(Class(:Workshop))
Declaration(Class(:WorkshopPaper))
Declaration(Class(<http://kracr.iiitd.edu.in/OWL2Bench#College>))
Declaration(Class(<http://kracr.iiitd.edu.in/OWL2Bench#ResearchGroup>))
Declaration(Class(<http://kracr.iiitd.edu.in/OWL2Bench#University>))
Declaration(Class(<http://purl.org/ontology/bibo/Manuscript>))
Declaration(Class(event:Event))
Declaration(Class(<http://www.ontologydesignpatterns.org/cp/owl/classification.owl#Concept>))
Declaration(Class(<http://www.ontologydesignpatterns.org/cp/owl/objectrole.owl#KeynoteSpeakerRole>))
Declaration(Class(<http://www.ontologydesignpatterns.org/cp/owl/objectrole.owl#Organizer>))
Declaration(Class(foaf:Organization))
Declaration(Class(foaf:Person))
Declaration(ObjectProperty(:attends))
Declaration(ObjectProperty(:getsAward))
Declaration(ObjectProperty(:getsBestPaperAward))
Declaration(ObjectProperty(:getsStudentGrant))
Declaration(ObjectProperty(:givesInvitedTalkAt))
Declaration(ObjectProperty(:givesKeynoteTalkAt))
Declaration(ObjectProperty(:givesTalkAt))
Declaration(ObjectProperty(:hasAcceptedPaper))
Declaration(ObjectProperty(:hasAccount))
Declaration(ObjectProperty(:hasAdvisor))
Declaration(ObjectProperty(:hasAffiliation))
Declaration(ObjectProperty(:hasAttendee))
Declaration(ObjectProperty(:hasAuthor))
Declaration(ObjectProperty(:hasChair))
Declaration(ObjectProperty(:hasChairRoleAt))
Declaration(ObjectProperty(:hasCoAuthor))
Declaration(ObjectProperty(:hasCollaborator))
Declaration(ObjectProperty(:hasDemoTrackChair))
Declaration(ObjectProperty(:hasDomain))
Declaration(ObjectProperty(:hasEventMode))
Declaration(ObjectProperty(:hasGeneralChair))
Declaration(ObjectProperty(:hasGeneralChairRoleAt))
Declaration(ObjectProperty(:hasInvitedTalk))
Declaration(ObjectProperty(:hasInvitedTalkSpeaker))
Declaration(ObjectProperty(:hasKeynoteSpeaker))
Declaration(ObjectProperty(:hasKeynoteTalk))
Declaration(ObjectProperty(:hasLocalChair))
Declaration(ObjectProperty(:hasMode))
Declaration(ObjectProperty(:hasOrganizer))
Declaration(ObjectProperty(:hasOrganizerRoleAt))
Declaration(ObjectProperty(:hasOrganizingCommittee))
Declaration(ObjectProperty(:hasOrganizingCommitteeMember))
Declaration(ObjectProperty(:hasPaper))
Declaration(ObjectProperty(:hasPaperDomain))
Declaration(ObjectProperty(:hasPaperTrack))
Declaration(ObjectProperty(:hasParticipant))
Declaration(ObjectProperty(:hasPosterTrackChair))
Declaration(ObjectProperty(:hasProject))
Declaration(ObjectProperty(:hasResearchTrackChair))
Declaration(ObjectProperty(:hasResourceTrackChair))
Declaration(ObjectProperty(:hasSession))
Declaration(ObjectProperty(:hasSocialMediaAccount))
Declaration(ObjectProperty(:hasSpeaker))
Declaration(ObjectProperty(:hasTalk))
Declaration(ObjectProperty(:hasTwitterAccount))
Declaration(ObjectProperty(:hasVolunteer))
Declaration(ObjectProperty(:hasWorkshopAndTutorialChair))
Declaration(ObjectProperty(:invitedTalkGivenBy))
Declaration(ObjectProperty(:isAcceptedAt))
Declaration(ObjectProperty(:isAuthorOf))
Declaration(ObjectProperty(:isChairOf))
Declaration(ObjectProperty(:isOrganizerOf))
Declaration(ObjectProperty(:isPresentedAt))
Declaration(ObjectProperty(:isPresentedBy))
Declaration(ObjectProperty(:keynoteTalkGivenBy))
Declaration(ObjectProperty(:organizes))
Declaration(ObjectProperty(:presents))
Declaration(ObjectProperty(:talkGivenBy))
Declaration(ObjectProperty(:volunteersFor))
Declaration(ObjectProperty(<http://anonymous.com/Location#hasLocation>))
Declaration(ObjectProperty(<http://kracr.iiitd.edu.in/OWL2Bench#isAffiliatedOrganizationOf>))
Declaration(ObjectProperty(<http://kracr.iiitd.edu.in/OWL2Bench#isPartOf>))
Declaration(ObjectProperty(<http://www.ontologydesignpatterns.org/cp/owl/objectrole.owl#hasRole>))
Declaration(DataProperty(:givesInvitedTalkOn))
Declaration(DataProperty(:givesKeynoteTalkOn))
Declaration(DataProperty(:givesTalkOn))
Declaration(DataProperty(:hasAuthorId))
Declaration(DataProperty(:hasConferenceName))
Declaration(DataProperty(:hasDeadline))
Declaration(DataProperty(:hasDuration))
Declaration(DataProperty(:hasEarlyRegistrationDeadline))
Declaration(DataProperty(:hasEdition))
Declaration(DataProperty(:hasEndDate))
Declaration(DataProperty(:hasId))
Declaration(DataProperty(:hasLocation))
Declaration(DataProperty(:hasName))
Declaration(DataProperty(:hasPaperId))
Declaration(DataProperty(:hasRegistrationDeadline))
Declaration(DataProperty(:hasStartDate))
Declaration(DataProperty(:hasStatus))
Declaration(DataProperty(:hasSubmissionDeadline))
Declaration(DataProperty(:hasTheme))
Declaration(DataProperty(:hasTitle))
Declaration(DataProperty(:hasVenue))
Declaration(DataProperty(:hasWebsiteURL))
Declaration(DataProperty(:isRelatedTo))
Declaration(NamedIndividual(:aiForSocialGood))
Declaration(NamedIndividual(:announcement))
Declaration(NamedIndividual(:applicationsTrack))
Declaration(NamedIndividual(:artificialIntelligence))
Declaration(NamedIndividual(:bigData))
Declaration(NamedIndividual(:blockChain))
Declaration(NamedIndividual(:cloudComputing))
Declaration(NamedIndividual(:computerVision))
Declaration(NamedIndividual(:dataScience))
Declaration(NamedIndividual(:deepLearning))
Declaration(NamedIndividual(:demoTrack))
Declaration(NamedIndividual(:doctoralConsortiumTrack))
Declaration(NamedIndividual(:generalChair))
Declaration(NamedIndividual(:hybrid))
Declaration(NamedIndividual(:insights))
Declaration(NamedIndividual(:internetOfThings))
Declaration(NamedIndividual(:journalSpecialIssue))
Declaration(NamedIndividual(:knowledgeGraph))
Declaration(NamedIndividual(:linkedData))
Declaration(NamedIndividual(:localChair))
Declaration(NamedIndividual(:machineLearning))
Declaration(NamedIndividual(:mainConferenceAnnouncement))
Declaration(NamedIndividual(:ml))
Declaration(NamedIndividual(:naturalLanguageProcessing))
Declaration(NamedIndividual(:neuralNetworks))
Declaration(NamedIndividual(:nlp))
Declaration(NamedIndividual(:notification))
Declaration(NamedIndividual(:offline))
Declaration(NamedIndividual(:online))
Declaration(NamedIndividual(:ontology))
Declaration(NamedIndividual(:posterTrack))
Declaration(NamedIndividual(:quantumComputing))
Declaration(NamedIndividual(:randomCategory))
Declaration(NamedIndividual(:reminder))
Declaration(NamedIndividual(:remote))
Declaration(NamedIndividual(:researchTrack))
Declaration(NamedIndividual(:researchTrackChair))
Declaration(NamedIndividual(:resourcesTrack))
Declaration(NamedIndividual(:resourcesTrackChair))
Declaration(NamedIndividual(:semanticWeb))
Declaration(NamedIndividual(:trackChair))
Declaration(NamedIndividual(:tutorialTrack))
Declaration(NamedIndividual(:tutorialTrackChair))
Declaration(NamedIndividual(:workshopTrack))
Declaration(NamedIndividual(:workshopTrackChair))
Declaration(AnnotationProperty(:isInstantaneous))
Declaration(AnnotationProperty(:isStatic))
Declaration(AnnotationProperty(:isTimeVarying))

############################
#   Object Properties
############################

# Object Property: :attends (:attends)

InverseObjectProperties(:attends :hasAttendee)
ObjectPropertyRange(:attends event:Event)

# Object Property: :getsAward (:getsAward)

SubObjectPropertyOf(:getsAward owl:topObjectProperty)

# Object Property: :getsBestPaperAward (:getsBestPaperAward)

SubObjectPropertyOf(:getsBestPaperAward :getsAward)

# Object Property: :getsStudentGrant (:getsStudentGrant)

SubObjectPropertyOf(:getsStudentGrant :getsAward)

# Object Property: :givesInvitedTalkAt (:givesInvitedTalkAt)

SubObjectPropertyOf(:givesInvitedTalkAt :givesTalkAt)
InverseObjectProperties(:givesInvitedTalkAt :hasInvitedTalkSpeaker)
ObjectPropertyDomain(:givesInvitedTalkAt :InvitedTalkSpeaker)

# Object Property: :givesKeynoteTalkAt (:givesKeynoteTalkAt)

SubObjectPropertyOf(:givesKeynoteTalkAt :givesTalkAt)
InverseObjectProperties(:givesKeynoteTalkAt :hasKeynoteSpeaker)
ObjectPropertyDomain(:givesKeynoteTalkAt :KeynoteSpeaker)

# Object Property: :givesTalkAt (:givesTalkAt)

InverseObjectProperties(:givesTalkAt :hasSpeaker)
ObjectPropertyRange(:givesTalkAt event:Event)

# Object Property: :hasAcceptedPaper (:hasAcceptedPaper)

SubObjectPropertyOf(:hasAcceptedPaper :isAuthorOf)

# Object Property: :hasAdvisor (:hasAdvisor)

AsymmetricObjectProperty(:hasAdvisor)

# Object Property: :hasAffiliation (:hasAffiliation)

ObjectPropertyRange(:hasAffiliation foaf:Organization)

# Object Property: :hasAttendee (:hasAttendee)

EquivalentObjectProperties(:hasAttendee :hasParticipant)
ObjectPropertyDomain(:hasAttendee event:Event)

# Object Property: :hasAuthor (:hasAuthor)

SubObjectPropertyOf(:hasAuthor owl:topObjectProperty)
InverseObjectProperties(:hasAuthor :isAuthorOf)
ObjectPropertyDomain(:hasAuthor :AcademicManuscript)

# Object Property: :hasChair (:hasChair)

SubObjectPropertyOf(:hasChair owl:topObjectProperty)
InverseObjectProperties(:hasChair :isChairOf)
DisjointObjectProperties(:hasChair :hasVolunteer)

# Object Property: :hasChairRoleAt (:hasChairRoleAt)

SubObjectPropertyOf(:hasChairRoleAt :hasOrganizerRoleAt)

# Object Property: :hasCoAuthor (:hasCoAuthor)

SubObjectPropertyOf(:hasCoAuthor :hasCollaborator)

# Object Property: :hasCollaborator (:hasCollaborator)

SymmetricObjectProperty(:hasCollaborator)
ReflexiveObjectProperty(:hasCollaborator)

# Object Property: :hasDemoTrackChair (:hasDemoTrackChair)

SubObjectPropertyOf(:hasDemoTrackChair :hasOrganizingCommitteeMember)

# Object Property: :hasEventMode (:hasEventMode)

SubObjectPropertyOf(:hasEventMode :hasMode)
ObjectPropertyDomain(:hasEventMode event:Event)
ObjectPropertyRange(:hasEventMode :EventMode)

# Object Property: :hasGeneralChair (:hasGeneralChair)

SubObjectPropertyOf(:hasGeneralChair :hasOrganizingCommitteeMember)

# Object Property: :hasGeneralChairRoleAt (:hasGeneralChairRoleAt)

SubObjectPropertyOf(:hasGeneralChairRoleAt :hasChairRoleAt)

# Object Property: :hasInvitedTalk (:hasInvitedTalk)

SubObjectPropertyOf(:hasInvitedTalk :hasTalk)

# Object Property: :hasInvitedTalkSpeaker (:hasInvitedTalkSpeaker)

SubObjectPropertyOf(:hasInvitedTalkSpeaker :hasSpeaker)
ObjectPropertyDomain(:hasInvitedTalkSpeaker event:Event)

# Object Property: :hasKeynoteSpeaker (:hasKeynoteSpeaker)

SubObjectPropertyOf(:hasKeynoteSpeaker :hasSpeaker)
ObjectPropertyDomain(:hasKeynoteSpeaker event:Event)
ObjectPropertyRange(:hasKeynoteSpeaker :KeynoteSpeaker)

# Object Property: :hasKeynoteTalk (:hasKeynoteTalk)

SubObjectPropertyOf(:hasKeynoteTalk :hasTalk)

# Object Property: :hasLocalChair (:hasLocalChair)

SubObjectPropertyOf(:hasLocalChair :hasOrganizingCommitteeMember)

# Object Property: :hasOrganizer (:hasOrganizer)

InverseObjectProperties(:hasOrganizer :isOrganizerOf)
ObjectPropertyDomain(:hasOrganizer event:Event)
ObjectPropertyRange(:hasOrganizer :Organizer)

# Object Property: :hasOrganizerRoleAt (:hasOrganizerRoleAt)

EquivalentObjectProperties(:hasOrganizerRoleAt :isOrganizerOf)

# Object Property: :hasOrganizingCommittee (:hasOrganizingCommittee)

AnnotationAssertion(rdfs:comment :hasOrganizingCommittee "Example:
ISWC hasOrganizingCommitte ISWCOrganizationCommittee 
ISWCOrganizationCommittee hasOrganizationCommitteeMember some Organizer")
ObjectPropertyDomain(:hasOrganizingCommittee event:Event)

# Object Property: :hasOrganizingCommitteeMember (:hasOrganizingCommitteeMember)

ObjectPropertyDomain(:hasOrganizingCommitteeMember event:Event)
ObjectPropertyRange(:hasOrganizingCommitteeMember :Organizer)

# Object Property: :hasPaper (:hasPaper)

EquivalentObjectProperties(:hasPaper :isAuthorOf)
ObjectPropertyRange(:hasPaper :AcademicManuscript)

# Object Property: :hasPaperDomain (:hasPaperDomain)

SubObjectPropertyOf(:hasPaperDomain :hasDomain)

# Object Property: :hasPaperTrack (:hasPaperTrack)

SubObjectPropertyOf(:hasPaperTrack owl:topObjectProperty)
ObjectPropertyRange(:hasPaperTrack :ConferenceTrack)

# Object Property: :hasPosterTrackChair (:hasPosterTrackChair)

SubObjectPropertyOf(:hasPosterTrackChair :hasOrganizingCommitteeMember)

# Object Property: :hasProject (:hasProject)

ObjectPropertyDomain(:hasProject foaf:Organization)

# Object Property: :hasResearchTrackChair (:hasResearchTrackChair)

SubObjectPropertyOf(:hasResearchTrackChair :hasOrganizingCommitteeMember)

# Object Property: :hasResourceTrackChair (:hasResourceTrackChair)

SubObjectPropertyOf(:hasResourceTrackChair :hasOrganizingCommitteeMember)

# Object Property: :hasSession (:hasSession)

ObjectPropertyDomain(:hasSession event:Event)
ObjectPropertyRange(:hasSession :Session)

# Object Property: :hasSocialMediaAccount (:hasSocialMediaAccount)

SubObjectPropertyOf(:hasSocialMediaAccount :hasAccount)

# Object Property: :hasSpeaker (:hasSpeaker)

SubObjectPropertyOf(:hasSpeaker owl:topObjectProperty)

# Object Property: :hasTwitterAccount (:hasTwitterAccount)

SubObjectPropertyOf(:hasTwitterAccount :hasSocialMediaAccount)

# Object Property: :hasWorkshopAndTutorialChair (:hasWorkshopAndTutorialChair)

SubObjectPropertyOf(:hasWorkshopAndTutorialChair :hasOrganizingCommitteeMember)

# Object Property: :invitedTalkGivenBy (:invitedTalkGivenBy)

SubObjectPropertyOf(:invitedTalkGivenBy :talkGivenBy)

# Object Property: :isAcceptedAt (:isAcceptedAt)

EquivalentObjectProperties(:isAcceptedAt :isPresentedAt)
ObjectPropertyDomain(:isAcceptedAt :AcademicManuscript)
ObjectPropertyRange(:isAcceptedAt :AcademicEvent)

# Object Property: :isAuthorOf (:isAuthorOf)

ObjectPropertyDomain(:isAuthorOf foaf:Person)
ObjectPropertyRange(:isAuthorOf :AcademicManuscript)

# Object Property: :isOrganizerOf (:isOrganizerOf)

SubObjectPropertyOf(:isOrganizerOf owl:topObjectProperty)

# Object Property: :isPresentedAt (:isPresentedAt)

AnnotationAssertion(rdfs:comment :isPresentedAt "what could be the inverse property of isPresentedAt?")
SubObjectPropertyOf(:isPresentedAt :isAcceptedAt)

# Object Property: :isPresentedBy (:isPresentedBy)

InverseObjectProperties(:isPresentedBy :presents)

# Object Property: :keynoteTalkGivenBy (:keynoteTalkGivenBy)

SubObjectPropertyOf(:keynoteTalkGivenBy :talkGivenBy)

# Object Property: :organizes (:organizes)

ObjectPropertyRange(:organizes event:Event)

# Object Property: :presents (:presents)

SubObjectPropertyOf(:presents :hasAcceptedPaper)

# Object Property: :talkGivenBy (:talkGivenBy)

ObjectPropertyDomain(:talkGivenBy :Talks)

# Object Property: :volunteersFor (:volunteersFor)

ObjectPropertyRange(:volunteersFor event:Event)

# Object Property: <http://kracr.iiitd.edu.in/OWL2Bench#isAffiliatedOrganizationOf> (<http://kracr.iiitd.edu.in/OWL2Bench#isAffiliatedOrganizationOf>)

AnnotationAssertion(rdfs:comment <http://kracr.iiitd.edu.in/OWL2Bench#isAffiliatedOrganizationOf> "linked with OWL2Bench")
IrreflexiveObjectProperty(<http://kracr.iiitd.edu.in/OWL2Bench#isAffiliatedOrganizationOf>)

# Object Property: <http://kracr.iiitd.edu.in/OWL2Bench#isPartOf> (<http://kracr.iiitd.edu.in/OWL2Bench#isPartOf>)

IrreflexiveObjectProperty(<http://kracr.iiitd.edu.in/OWL2Bench#isPartOf>)

# Object Property: <http://www.ontologydesignpatterns.org/cp/owl/objectrole.owl#hasRole> (<http://www.ontologydesignpatterns.org/cp/owl/objectrole.owl#hasRole>)

ObjectPropertyDomain(<http://www.ontologydesignpatterns.org/cp/owl/objectrole.owl#hasRole> foaf:Person)
ObjectPropertyRange(<http://www.ontologydesignpatterns.org/cp/owl/objectrole.owl#hasRole> <http://www.ontologydesignpatterns.org/cp/owl/classification.owl#Concept>)

# Object Property: owl:topObjectProperty (owl:topObjectProperty)

ObjectPropertyRange(owl:topObjectProperty :AcademicManuscript)


############################
#   Data Properties
############################

# Data Property: :givesInvitedTalkOn (:givesInvitedTalkOn)

SubDataPropertyOf(:givesInvitedTalkOn owl:topDataProperty)
DataPropertyDomain(:givesInvitedTalkOn :InvitedTalkSpeaker)
DataPropertyRange(:givesInvitedTalkOn xsd:string)

# Data Property: :givesKeynoteTalkOn (:givesKeynoteTalkOn)

SubDataPropertyOf(:givesKeynoteTalkOn owl:topDataProperty)
DataPropertyDomain(:givesKeynoteTalkOn :KeynoteSpeaker)
DataPropertyRange(:givesKeynoteTalkOn xsd:string)

# Data Property: :givesTalkOn (:givesTalkOn)

DataPropertyDomain(:givesTalkOn foaf:Person)
DataPropertyRange(:givesTalkOn xsd:string)

# Data Property: :hasAuthorId (:hasAuthorId)

SubDataPropertyOf(:hasAuthorId owl:topDataProperty)

# Data Property: :hasConferenceName (:hasConferenceName)

SubDataPropertyOf(:hasConferenceName owl:topDataProperty)
DataPropertyDomain(:hasConferenceName :Conference)
DataPropertyRange(:hasConferenceName xsd:string)

# Data Property: :hasDeadline (:hasDeadline)

DataPropertyDomain(:hasDeadline :AcademicEvent)
DataPropertyRange(:hasDeadline xsd:dateTimeStamp)

# Data Property: :hasDuration (:hasDuration)

AnnotationAssertion(rdfs:comment :hasDuration "An event can go for days, hours, or months.")
DataPropertyDomain(:hasDuration event:Event)
DataPropertyRange(:hasDuration xsd:string)
DisjointDataProperties(:hasDuration :hasLocation)

# Data Property: :hasEarlyRegistrationDeadline (:hasEarlyRegistrationDeadline)

SubDataPropertyOf(:hasEarlyRegistrationDeadline owl:topDataProperty)

# Data Property: :hasEdition (:hasEdition)

AnnotationAssertion(rdfs:comment :hasEdition "3rd or third")
DataPropertyDomain(:hasEdition :AcademicEvent)
DataPropertyRange(:hasEdition xsd:string)

# Data Property: :hasId (:hasId)

DataPropertyRange(:hasId xsd:string)

# Data Property: :hasLocation (:hasLocation)

EquivalentDataProperties(:hasLocation :hasVenue)
DataPropertyRange(:hasLocation xsd:string)

# Data Property: :hasName (:hasName)

DataPropertyRange(:hasName xsd:string)

# Data Property: :hasPaperId (:hasPaperId)

SubDataPropertyOf(:hasPaperId owl:topDataProperty)

# Data Property: :hasRegistrationDeadline (:hasRegistrationDeadline)

SubDataPropertyOf(:hasRegistrationDeadline owl:topDataProperty)

# Data Property: :hasStartDate (:hasStartDate)

DataPropertyDomain(:hasStartDate event:Event)
DataPropertyRange(:hasStartDate xsd:dateTimeStamp)

# Data Property: :hasStatus (:hasStatus)

AnnotationAssertion(rdfs:comment :hasStatus "Announced, Approaching, TakingPlace, Over")
DataPropertyDomain(:hasStatus :AcademicEvent)
DataPropertyRange(:hasStatus xsd:string)

# Data Property: :hasSubmissionDeadline (:hasSubmissionDeadline)

SubDataPropertyOf(:hasSubmissionDeadline owl:topDataProperty)

# Data Property: :hasTheme (:hasTheme)

DataPropertyRange(:hasTheme xsd:string)

# Data Property: :hasTitle (:hasTitle)

DataPropertyRange(:hasTitle xsd:string)

# Data Property: :hasVenue (:hasVenue)

SubDataPropertyOf(:hasVenue owl:topDataProperty)
DataPropertyRange(:hasVenue xsd:string)

# Data Property: :hasWebsiteURL (:hasWebsiteURL)

DataPropertyRange(:hasWebsiteURL xsd:anyURI)

# Data Property: :isRelatedTo (:isRelatedTo)

AnnotationAssertion(rdfs:comment :isRelatedTo "Every aacdemic manuscript is related to some topic. For example AI")



############################
#   Classes
############################

# Class: :AcademicEvent (:AcademicEvent)

AnnotationAssertion(rdfs:comment :AcademicEvent "Every academic event has a track")
SubClassOf(:AcademicEvent event:Event)
SubClassOf(:AcademicEvent ObjectSomeValuesFrom(:hasPaperTrack :ConferenceTrack))
SubClassOf(:AcademicEvent ObjectSomeValuesFrom(:hasTalk :Talks))
SubClassOf(:AcademicEvent DataSomeValuesFrom(:hasWebsiteURL xsd:anyURI))

# Class: :AcademicEventPhases (:AcademicEventPhases)

SubClassOf(:AcademicEventPhases :EventPhases)

# Class: :AcademicManuscript (:AcademicManuscript)

AnnotationAssertion(:isInstantaneous :AcademicManuscript "")
SubClassOf(:AcademicManuscript <http://purl.org/ontology/bibo/Manuscript>)

# Class: :AcademicOrganization (:AcademicOrganization)

AnnotationAssertion(rdfs:comment :AcademicOrganization "Can be linked to OWL2Bench?")
SubClassOf(:AcademicOrganization foaf:Organization)

# Class: :AcceptedPapersNotificationPhase (:AcceptedPapersNotificationPhase)

SubClassOf(:AcceptedPapersNotificationPhase :NotificationPhase)

# Class: :AnnouncementPhase (:AnnouncementPhase)

SubClassOf(:AnnouncementPhase :ConferenceEventPhases)

# Class: :Attendee (:Attendee)

EquivalentClasses(:Attendee :Participant)

# Class: :Author (:Author)

SubClassOf(:Author foaf:Person)
SubClassOf(:Author ObjectSomeValuesFrom(:hasAcceptedPaper :AcademicManuscript))
DisjointClasses(:Author :NonAuthor)

# Class: :Awardee (:Awardee)

SubClassOf(:Awardee foaf:Person)

# Class: :BestPaperAwardee (:BestPaperAwardee)

SubClassOf(:BestPaperAwardee :Awardee)
SubClassOf(:BestPaperAwardee ObjectSomeValuesFrom(:getsBestPaperAward owl:Thing))

# Class: :CallForPapersAnnouncementPhase (:CallForPapersAnnouncementPhase)

SubClassOf(:CallForPapersAnnouncementPhase :EarlyAnnouncementPhase)

# Class: :ChairRole (:ChairRole)

AnnotationAssertion(rdfs:comment :ChairRole "Each track will have a chair")
SubClassOf(:ChairRole <http://www.ontologydesignpatterns.org/cp/owl/objectrole.owl#Organizer>)

# Class: :ComputerScienceDomain (:ComputerScienceDomain)

SubClassOf(:ComputerScienceDomain :ManuscriptDomain)

# Class: :Conference (:Conference)

AnnotationAssertion(:isStatic :Conference "")
SubClassOf(:Conference :AcademicEvent)

# Class: :ConferenceEventPhases (:ConferenceEventPhases)

SubClassOf(:ConferenceEventPhases :AcademicEventPhases)

# Class: :ConferencePaper (:ConferencePaper)

AnnotationAssertion(:isInstantaneous :ConferencePaper "")
SubClassOf(:ConferencePaper :AcademicManuscript)
SubClassOf(:ConferencePaper ObjectSomeValuesFrom(:isAcceptedAt :Conference))

# Class: :ConferenceTrack (:ConferenceTrack)

AnnotationAssertion(rdfs:comment :ConferenceTrack "Every Academic Event Track is a subevent of  Academic Event")
SubClassOf(:ConferenceTrack :AacdemicEventTrack)

# Class: :DemoPaper (:DemoPaper)

AnnotationAssertion(:isInstantaneous :DemoPaper "")
SubClassOf(:DemoPaper :ConferencePaper)

# Class: :EarlyAnnouncementPhase (:EarlyAnnouncementPhase)

SubClassOf(:EarlyAnnouncementPhase :AnnouncementPhase)

# Class: :EarlyRegistrationReminderPhase (:EarlyRegistrationReminderPhase)

SubClassOf(:EarlyRegistrationReminderPhase :RegistrationReminderPhase)

# Class: :EditorRole (:EditorRole)

SubClassOf(:EditorRole <http://www.ontologydesignpatterns.org/cp/owl/objectrole.owl#Organizer>)

# Class: :InvitedTalkSpeaker (:InvitedTalkSpeaker)

SubClassOf(:InvitedTalkSpeaker :Speaker)
SubClassOf(:InvitedTalkSpeaker ObjectSomeValuesFrom(<http://www.ontologydesignpatterns.org/cp/owl/objectrole.owl#hasRole> :InvitedTalkSpeakerRole))

# Class: :InvitedTalkSpeakerRole (:InvitedTalkSpeakerRole)

SubClassOf(:InvitedTalkSpeakerRole :SpeakerRole)

# Class: :InvitedTalks (:InvitedTalks)

SubClassOf(:InvitedTalks :Talks)
SubClassOf(:InvitedTalks ObjectSomeValuesFrom(:invitedTalkGivenBy :InvitedTalkSpeaker))

# Class: :JournalArticle (:JournalArticle)

AnnotationAssertion(:isInstantaneous :JournalArticle "")
SubClassOf(:JournalArticle :AcademicManuscript)

# Class: :KeynoteSpeaker (:KeynoteSpeaker)

SubClassOf(:KeynoteSpeaker :Speaker)
SubClassOf(:KeynoteSpeaker ObjectSomeValuesFrom(<http://www.ontologydesignpatterns.org/cp/owl/objectrole.owl#hasRole> <http://www.ontologydesignpatterns.org/cp/owl/objectrole.owl#KeynoteSpeakerRole>))

# Class: :KeynoteTalks (:KeynoteTalks)

SubClassOf(:KeynoteTalks :Talks)
SubClassOf(:KeynoteTalks ObjectSomeValuesFrom(:keynoteTalkGivenBy :KeynoteSpeaker))

# Class: :LightningTalks (:LightningTalks)

SubClassOf(:LightningTalks :Talks)

# Class: :MainConferenceAnnouncementPhase (:MainConferenceAnnouncementPhase)

SubClassOf(:MainConferenceAnnouncementPhase :EarlyAnnouncementPhase)

# Class: :NonAcademicOrganization (:NonAcademicOrganization)

SubClassOf(:NonAcademicOrganization foaf:Organization)
SubClassOf(:NonAcademicOrganization ObjectComplementOf(:AcademicOrganization))

# Class: :NonAuthor (:NonAuthor)

SubClassOf(:NonAuthor foaf:Person)
SubClassOf(:NonAuthor ObjectComplementOf(:Author))

# Class: :NotificationPhase (:NotificationPhase)

SubClassOf(:NotificationPhase :ConferenceEventPhases)

# Class: :Organizer (:Organizer)

AnnotationAssertion(rdfs:comment :Organizer "I have added")
SubClassOf(:Organizer foaf:Person)
SubClassOf(:Organizer ObjectSomeValuesFrom(<http://www.ontologydesignpatterns.org/cp/owl/objectrole.owl#hasRole> <http://www.ontologydesignpatterns.org/cp/owl/objectrole.owl#Organizer>))

# Class: :OrganizingCommittee (:OrganizingCommittee)

SubClassOf(:OrganizingCommittee ObjectSomeValuesFrom(:hasOrganizingCommitteeMember :Organizer))

# Class: :PaperSubmissionReminderPhase (:PaperSubmissionReminderPhase)

SubClassOf(:PaperSubmissionReminderPhase :ReminderPhase)

# Class: :Participant (:Participant)

AnnotationAssertion(rdfs:comment :Participant "Attendee could be an equivalent class?")
SubClassOf(:Participant foaf:Person)
SubClassOf(:Participant ObjectSomeValuesFrom(:attends :AcademicEvent))

# Class: :PhDStudent (:PhDStudent)

AnnotationAssertion(rdfs:comment :PhDStudent "Define this and include in the table")
SubClassOf(:PhDStudent :StudentAuthor)

# Class: :PosterPaper (:PosterPaper)

AnnotationAssertion(:isInstantaneous :PosterPaper "")
SubClassOf(:PosterPaper :ConferencePaper)

# Class: :Presentations (:Presentations)

SubClassOf(:Presentations :Talks)

# Class: :RegistrationReminderPhase (:RegistrationReminderPhase)

SubClassOf(:RegistrationReminderPhase :ReminderPhase)

# Class: :ReminderPhase (:ReminderPhase)

SubClassOf(:ReminderPhase :ConferenceEventPhases)

# Class: :ResearchPaper (:ResearchPaper)

SubClassOf(:ResearchPaper :ConferencePaper)

# Class: :ResourcePaper (:ResourcePaper)

SubClassOf(:ResourcePaper :ConferencePaper)

# Class: :SingleAuthorPaper (:SingleAuthorPaper)

SubClassOf(:SingleAuthorPaper :AcademicManuscript)

# Class: :Speaker (:Speaker)

SubClassOf(:Speaker foaf:Person)

# Class: :SpeakerRole (:SpeakerRole)

SubClassOf(:SpeakerRole <http://www.ontologydesignpatterns.org/cp/owl/classification.owl#Concept>)

# Class: :Student (:Student)

AnnotationAssertion(:isTimeVarying :Student "")
AnnotationAssertion(rdfs:comment :Student "Student may particiate in DC")
SubClassOf(:Student foaf:Person)

# Class: :StudentAuthor (:StudentAuthor)

SubClassOf(:StudentAuthor foaf:Person)
SubClassOf(:StudentAuthor ObjectIntersectionOf(:Author :Student))

# Class: :StudentGrantAwardee (:StudentGrantAwardee)

SubClassOf(:StudentGrantAwardee :Awardee)
SubClassOf(:StudentGrantAwardee ObjectSomeValuesFrom(:getsStudentGrant owl:Thing))

# Class: :Volunteer (:Volunteer)

AnnotationAssertion(rdfs:comment :Volunteer "is volunteer part of organizing team? or 'has role'?")
SubClassOf(:Volunteer :Participant)
SubClassOf(:Volunteer ObjectSomeValuesFrom(:volunteersFor :AcademicEvent))

# Class: :Workshop (:Workshop)

AnnotationAssertion(:isStatic :Workshop "")
SubClassOf(:Workshop :AcademicEvent)

# Class: :WorkshopPaper (:WorkshopPaper)

AnnotationAssertion(:isInstantaneous :WorkshopPaper "")
SubClassOf(:WorkshopPaper :ConferencePaper)

# Class: <http://kracr.iiitd.edu.in/OWL2Bench#College> (<http://kracr.iiitd.edu.in/OWL2Bench#College>)

SubClassOf(<http://kracr.iiitd.edu.in/OWL2Bench#College> :AcademicOrganization)

# Class: <http://kracr.iiitd.edu.in/OWL2Bench#ResearchGroup> (<http://kracr.iiitd.edu.in/OWL2Bench#ResearchGroup>)

SubClassOf(<http://kracr.iiitd.edu.in/OWL2Bench#ResearchGroup> foaf:Organization)

# Class: <http://kracr.iiitd.edu.in/OWL2Bench#University> (<http://kracr.iiitd.edu.in/OWL2Bench#University>)

SubClassOf(<http://kracr.iiitd.edu.in/OWL2Bench#University> :AcademicOrganization)

# Class: <http://purl.org/ontology/bibo/Manuscript> (<http://purl.org/ontology/bibo/Manuscript>)

SubClassOf(<http://purl.org/ontology/bibo/Manuscript> ObjectSomeValuesFrom(:hasAuthor :Author))

# Class: event:Event (event:Event)

SubClassOf(event:Event ObjectSomeValuesFrom(:hasEventMode :EventMode))
SubClassOf(event:Event ObjectSomeValuesFrom(:hasOrganizingCommittee :OrganizingCommittee))
SubClassOf(event:Event DataSomeValuesFrom(:hasLocation xsd:string))
SubClassOf(event:Event DataSomeValuesFrom(:hasTitle xsd:string))

# Class: <http://www.ontologydesignpatterns.org/cp/owl/classification.owl#Concept> (Role)

AnnotationAssertion(rdfs:label <http://www.ontologydesignpatterns.org/cp/owl/classification.owl#Concept> "Role")

# Class: <http://www.ontologydesignpatterns.org/cp/owl/objectrole.owl#KeynoteSpeakerRole> (KeyNoteSpeakerRole)

AnnotationAssertion(rdfs:isDefinedBy <http://www.ontologydesignpatterns.org/cp/owl/objectrole.owl#KeynoteSpeakerRole> <http://www.ontologydesignpatterns.org/cp/owl/objectrole.owl>)
AnnotationAssertion(rdfs:label <http://www.ontologydesignpatterns.org/cp/owl/objectrole.owl#KeynoteSpeakerRole> "KeyNoteSpeakerRole"@en)
SubClassOf(<http://www.ontologydesignpatterns.org/cp/owl/objectrole.owl#KeynoteSpeakerRole> :SpeakerRole)

# Class: <http://www.ontologydesignpatterns.org/cp/owl/objectrole.owl#Organizer> (OrganizerRole)

AnnotationAssertion(rdfs:isDefinedBy <http://www.ontologydesignpatterns.org/cp/owl/objectrole.owl#Organizer> <http://www.ontologydesignpatterns.org/cp/owl/objectrole.owl>)
AnnotationAssertion(rdfs:label <http://www.ontologydesignpatterns.org/cp/owl/objectrole.owl#Organizer> "OrganizerRole"@en)
SubClassOf(<http://www.ontologydesignpatterns.org/cp/owl/objectrole.owl#Organizer> <http://www.ontologydesignpatterns.org/cp/owl/classification.owl#Concept>)

# Class: foaf:Organization (foaf:Organization)

AnnotationAssertion(:isStatic foaf:Organization "")

# Class: foaf:Person (foaf:Person)

SubClassOf(foaf:Person ObjectSomeValuesFrom(:hasAffiliation foaf:Organization))


############################
#   Named Individuals
############################

# Individual: :aiForSocialGood (:aiForSocialGood)

ClassAssertion(:ComputerScienceDomain :aiForSocialGood)

# Individual: :applicationsTrack (:applicationsTrack)

ClassAssertion(:ConferenceTrack :applicationsTrack)

# Individual: :artificialIntelligence (:artificialIntelligence)

ClassAssertion(:ComputerScienceDomain :artificialIntelligence)

# Individual: :bigData (:bigData)

ClassAssertion(:ComputerScienceDomain :bigData)

# Individual: :blockChain (:blockChain)

ClassAssertion(:ComputerScienceDomain :blockChain)

# Individual: :cloudComputing (:cloudComputing)

ClassAssertion(:ComputerScienceDomain :cloudComputing)

# Individual: :computerVision (:computerVision)

ClassAssertion(:ComputerScienceDomain :computerVision)

# Individual: :dataScience (:dataScience)

ClassAssertion(:ComputerScienceDomain :dataScience)

# Individual: :deepLearning (:deepLearning)

ClassAssertion(:ComputerScienceDomain :deepLearning)

# Individual: :demoTrack (:demoTrack)

ClassAssertion(:ConferenceTrack :demoTrack)

# Individual: :doctoralConsortiumTrack (:doctoralConsortiumTrack)

ClassAssertion(:ConferenceTrack :doctoralConsortiumTrack)

# Individual: :generalChair (:generalChair)

ClassAssertion(:ChairRole :generalChair)

# Individual: :hybrid (:hybrid)

ClassAssertion(:EventMode :hybrid)

# Individual: :internetOfThings (:internetOfThings)

ClassAssertion(:ComputerScienceDomain :internetOfThings)

# Individual: :journalSpecialIssue (:journalSpecialIssue)

ClassAssertion(:ConferenceTrack :journalSpecialIssue)

# Individual: :knowledgeGraph (:knowledgeGraph)

ClassAssertion(:ComputerScienceDomain :knowledgeGraph)

# Individual: :linkedData (:linkedData)

ClassAssertion(:ComputerScienceDomain :linkedData)

# Individual: :localChair (:localChair)

ClassAssertion(:ChairRole :localChair)

# Individual: :machineLearning (:machineLearning)

ClassAssertion(:ComputerScienceDomain :machineLearning)

# Individual: :ml (:ml)

ClassAssertion(:ComputerScienceDomain :ml)

# Individual: :naturalLanguageProcessing (:naturalLanguageProcessing)

ClassAssertion(:ComputerScienceDomain :naturalLanguageProcessing)

# Individual: :neuralNetworks (:neuralNetworks)

ClassAssertion(:ComputerScienceDomain :neuralNetworks)

# Individual: :nlp (:nlp)

ClassAssertion(:ComputerScienceDomain :nlp)

# Individual: :offline (:offline)

ClassAssertion(:EventMode :offline)

# Individual: :online (:online)

ClassAssertion(:EventMode :online)

# Individual: :ontology (:ontology)

ClassAssertion(:ComputerScienceDomain :ontology)

# Individual: :posterTrack (:posterTrack)

ClassAssertion(:ConferenceTrack :posterTrack)

# Individual: :quantumComputing (:quantumComputing)

ClassAssertion(:ComputerScienceDomain :quantumComputing)

# Individual: :researchTrack (:researchTrack)

ClassAssertion(:ConferenceTrack :researchTrack)

# Individual: :researchTrackChair (:researchTrackChair)

ClassAssertion(:ChairRole :researchTrackChair)

# Individual: :resourcesTrack (:resourcesTrack)

ClassAssertion(:ConferenceTrack :resourcesTrack)

# Individual: :resourcesTrackChair (:resourcesTrackChair)

ClassAssertion(:ChairRole :resourcesTrackChair)

# Individual: :semanticWeb (:semanticWeb)

ClassAssertion(:ComputerScienceDomain :semanticWeb)

# Individual: :trackChair (:trackChair)

ClassAssertion(:ChairRole :trackChair)

# Individual: :tutorialTrack (:tutorialTrack)

ClassAssertion(:ConferenceTrack :tutorialTrack)

# Individual: :tutorialTrackChair (:tutorialTrackChair)

ClassAssertion(:ChairRole :tutorialTrackChair)

# Individual: :workshopTrack (:workshopTrack)

ClassAssertion(:ConferenceTrack :workshopTrack)

# Individual: :workshopTrackChair (:workshopTrackChair)

ClassAssertion(:ChairRole :workshopTrackChair)


DifferentIndividuals(:offline :online)
)